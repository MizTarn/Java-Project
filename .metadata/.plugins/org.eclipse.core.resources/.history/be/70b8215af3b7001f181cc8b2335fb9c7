package view;

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.Node;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.layout.FlowPane;
import javafx.scene.layout.HBox;

import java.util.ArrayList;
import java.util.Objects;

import application.GameApplication;
import card.Card;
import card.HandForDurak;
import help.Helper;

public class BaseController {

	@FXML
	private Button btnAction;

	@FXML
	private HBox hand;

	@FXML
	private Label sizeDeck;

	@FXML
	private FlowPane table;

	@FXML
	private Label labelTrumpCard; 
	@FXML
	private Label labelMove;
	//	public void setCardsInHand(HandForDurak updating) {
//		hand.getChildren().clear();
//		if (updating != null) {
//			for (Card cd : updating.getCardsInHand()) { 
//				ImageView iv = new ImageView(cd.getImage()); 
//				iv.setFitHeight(175);
//				iv.setFitWidth(100);
//				iv.setUserData(cd);
//				iv.setOnMouseClicked(this::drop);
//				System.out.println("DROP CAI NAY (O TRONG GAME2CONTROLLER)");
//				hand.getChildren().add(iv);
//			}
//			FXCollections.sort(hand.getChildren(), comparator);
//		}
//	}

	public void setDisableActions(boolean flag) {
		btnAction.setDisable(!flag);
		for (Node nd : hand.getChildren()) {
			nd.setDisable(!flag);
		}
		labelMove.setVisible(flag);
	}

	public void setEndGame(String nick) {
		Helper.sendConf(nick);
	}

//	public void setTrumpCardImage(Card cd) {
//		trumpCardImage.setImage(cd.getImage());
//	}

	public void setTextAction(String str) {
		btnAction.setText(str);
		if (Objects.equals(str, "Discard")) {
			System.out.println("DAY LA DISCARD");
			btnAction.setOnAction(this::discard);
		} else if (Objects.equals(str, "Take")) {
			System.out.println("DAY LA TAKE");
			btnAction.setOnAction(this::take);
		} else if (Objects.equals(str, "Pass")) {
			System.out.println("DAY LA PASS");
			btnAction.setOnAction(this::pass);
		} else {
			btnAction.setDisable(true);
		}
	}

//	public void trumpCardUsed() {
//		trumpCardImage.setImage(null);
//		labelTrumpCard.setVisible(false);
//	}

	public void setSize(int i) {
		sizeDeck.setText(Integer.toString(i));
	}

//	public void setTable(ArrayList<Card> t) {
//		table.getChildren().clear();
//		if (!t.isEmpty()) {
//			for (Card cd : t) {
//				ImageView iv = new ImageView(cd.getImage());
//				iv.setFitHeight(175);
//				iv.setFitWidth(100);
//				iv.setUserData(cd);
//				iv.setDisable(true);
//				table.getChildren().add(iv);
//			}
//		}
//	}

//	public void drop(MouseEvent event) {
//		ImageView iv = (ImageView) event.getSource();
//		Card cd = (Card) iv.getUserData();
//		GameApplication.client.sendGameMove("drop_card", cd);
//		System.out.println("da gui drop_card(controller): " + iv.getUserData().toString());
//	}

	public void take(ActionEvent event) {
		GameApplication.client.sendGameMove("take_card", null);
		System.out.println("da gui take_card(controller)");
		 labelMove.setText("Bạn đã lấy thẻ bài!");

	}

	public void discard(ActionEvent event) {
		GameApplication.client.sendGameMove("discard", null);
		System.out.println("da gui discard (controller)");
	}

	public void pass(ActionEvent event) {
		GameApplication.client.sendGameMove("pass", null);
		System.out.println("da gui pass turn (controller)");
	}

	public void setCardsInHand(HandForDurak handForDurak) {
		// TODO Auto-generated method stub
		
	}

	public void setTable(ArrayList<Card> cards) {
		// TODO Auto-generated method stub
		
	}
}
