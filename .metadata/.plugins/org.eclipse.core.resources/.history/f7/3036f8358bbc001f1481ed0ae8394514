package server;

import java.io.*;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.HashMap;
import java.util.Objects;

import command.BaccaratParseData;
import command.ParseData;
import manager.BaccaratManager;
import manager.BaccaratTable;
import manager.GameManager;
import manager.PlayerManager;
import manager.Table;
import manager.TurnManager;
import player.BaccaratPlayer;
import player.Player;

public class TestServer {
	private static ServerSocket server;
	private static HashMap<String, NewConnection> connections = new HashMap<>();

	public static void main(String[] args) {
		try {
			server = new ServerSocket(12345);
			// Khởi tạo các đối tượng phụ thuộc
			BaccaratTable tableManager = new BaccaratTable();
			PlayerManager<BaccaratPlayer> playerManager = new PlayerManager<BaccaratPlayer>();
			TurnManager<BaccaratPlayer> turnManager = new TurnManager<BaccaratPlayer>(playerManager);
			ConnectionManager connectionManager = new ConnectionManager();
			// Khởi tạo GameManager với Dependency Injection
			BaccaratManager gameManager = new BaccaratManager(tableManager, playerManager, turnManager);

			// Khởi tạo ParseAndSendData
			BaccaratParseData parseAndSendData = new BaccaratParseData(gameManager);
			int numberPlayer = 0;

			while (true) {
				Socket socket = server.accept();
				PrintWriter out = new PrintWriter(socket.getOutputStream(), true);
				BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));

				while (true) {
					String[] data = in.readLine().split("#");
					String operation = data[0];
					if (operation != null) {
						if (Objects.equals(operation, "create_session")) {
							String nickname = data[1];
							String session_id = data[2];
							BaccaratPlayer host = new BaccaratPlayer(nickname, session_id);
							NewConnection connection = new NewConnection(connectionManager, gameManager,
									parseAndSendData, numberPlayer);
							connection.addPlayer(in, out, host);
							connections.put(host.getId(), connection);
							Thread con = new Thread(connection);
							con.setDaemon(true);
							con.start();
							break;
						} else if (Objects.equals(operation, "join_session")) {
							String nickname = data[1];
							String session_id = data[2];
							BaccaratPlayer member = new BaccaratPlayer(nickname);
							if (connections.containsKey(session_id)) {
								connections.get(session_id).addStreams(in, out, member);
							} else {
								out.println("join_session_failed");
							}
							break;

						}
						else {
							numberPlayer = Integer.parseInt(operation);
						}
					}

					else {
						socket.close();
					}
				}
			}
		} catch (IOException ex) {
			System.out.println("Error occurred in main in ServerHandler: " + ex.toString());
			ex.printStackTrace();
		}
	}
}